import asyncio
from datetime import datetime
from typing import List
from run import bot
from marzban import MarzbanAPI
from app.database import get_all_users
from config import MARZBAN_URL, MARZBAN_USERNAME, MARZBAN_PASSWORD, ADMIN_TELEGRAM_ID
from aiogram.enums import ParseMode

api = MarzbanAPI(base_url=MARZBAN_URL)


async def get_inactive_users() -> List[str]:
    """–ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ —Ç—Ä–∞—Ñ–∏–∫ –∏ —É –∫–æ—Ç–æ—Ä—ã—Ö –∞–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞."""
    inactive_users = []
    users = await get_all_users()
    token = await api.get_token(username=MARZBAN_USERNAME, password=MARZBAN_PASSWORD)
    current_timestamp = int(datetime.now().timestamp())

    for user_id in users:
        user = await api.get_user(username=user_id, token=token.access_token)
        if user.used_traffic == 0 and user.expire > current_timestamp:
            inactive_users.append(user.username)

    return inactive_users


async def safe_send_message(user_id: str, message: str):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–æ–∑–º–æ–∂–Ω—ã–µ –æ—à–∏–±–∫–∏."""
    try:
        await bot.send_message(
            chat_id=user_id,
            text=message,
            parse_mode=ParseMode.HTML
        )
        print(f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {user_id}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è {user_id}: {e}")


async def send_messages_to_users(user_ids: List[str], message: str):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–ø–∏—Å–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π."""
    for user_id in user_ids:
        await safe_send_message(user_id, message)


async def send_message_to_inactive_users(message: str):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ —Ç—Ä–∞—Ñ–∏–∫ –∏ —É –∫–æ—Ç–æ—Ä—ã—Ö –∞–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞."""
    users = await get_inactive_users()
    users.append(ADMIN_TELEGRAM_ID)
    await send_messages_to_users(users, message)


async def send_message_to_all_users(message: str):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º."""
    users = await get_all_users()
    users.append(ADMIN_TELEGRAM_ID)
    await send_messages_to_users(users, message)


async def main():
    """
    –†—É—á–Ω–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.
    """
    message_all = (
        '<b>üéâ –û—Ç–ª–∏—á–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏!</b>\n\n'
        'üìâ –ú—ã <b>—Å–Ω–∏–∑–∏–ª–∏ —Ü–µ–Ω—ã</b> –Ω–∞ –ø–æ–¥–ø–∏—Å–∫—É!\n'
        '–¢–µ–ø–µ—Ä—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –Ω–∞—à–∏–º —Å–µ—Ä–≤–∏—Å–æ–º —Å—Ç–∞–ª–æ –µ—â—ë –≤—ã–≥–æ–¥–Ω–µ–µ.\n\n'
        'üëâ –ù–∞–∂–º–∏—Ç–µ /start, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –Ω–æ–≤—ã–π —Ç–∞—Ä–∏—Ñ.'
    )

    message_inactive = (
        '<b>‚ö†Ô∏è –í–æ–∑–Ω–∏–∫–ª–∏ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏ —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º?</b>\n\n'
        '–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É, –∏ –º—ã –ø–æ–º–æ–∂–µ–º!\n'
        'üë∑ @id'
    )

    # –í—ã–±—Ä–∞—Ç—å –Ω—É–∂–Ω–æ–µ:
    # await send_message_to_all_users(message_all)
    # await send_message_to_inactive_users(message_inactive)


if __name__ == '__main__':
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print('Exit')
